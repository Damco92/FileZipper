{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        parentData['childRecords'].splice(p, 1);\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[i].hasChildRecords) {\n                                    _this.updateParentSelection(child[i]);\n                                }\n                                else if (!(child[i].hasChildRecords) && !isNullOrUndefined(child[i])) {\n                                    _this.updateSelectedItems(child[i], child[i].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[getColumnByField](this.parent.grid.\n                    sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[i].getElementsByClassName(\"e-frame e-icons e-uncheck\").length) {\n                        _this.grid.selectionModule[updateRowSelection](_this.getRows()[i], _this.getCurrentViewRecords()[i].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ? _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[i]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[k];\n                delete currentObject[objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var stackedHeader = false;\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[i].template = temp;\n                }\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                if (!isNullOrUndefined(record[i].parentItem)) {\n                    var pindex = this.flatData[record[i].parentItem.index].index;\n                    if (this.flatData[pindex].expanded === false) {\n                        record.push(this.flatData[pindex]);\n                        this.flatData[pindex].expanded = true;\n                    }\n                }\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_2 = function (i) {\n                draggedRecord_2 = dragRecords[i];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, tObj);\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, this.parent);\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('aria-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[primaryKeys_2[0]] === args.data[i][primaryKeys_2[0]]) {\n                            data_1[i] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[i].uniqueID);\n                var childs = findChildrenRecords(data_1[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.grid.getCurrentViewRecords().indexOf(this.addRowRecord);\n                this.selectedIndex = parseInt(this.parent.getRows()[this.addRowIndex].getAttribute('aria-rowindex'));\n                ;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction());\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                if (!this.parent.enableColumnVirtualization) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[containerRect])) {\n            this.observer[containerRect] = this.observers[containerRect];\n        }\n        if (args.selectedIndex !== 0 || isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[preventEvent]) {\n                    _this.parent.showSpinner();\n                }\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                _this.virtualEle.adjustTable(x, _this.translateY);\n                if (_this.parent.enableColumnVirtualization) {\n                    _this.header.virtualEle.adjustTable(x, 0);\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left')) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n            _super.prototype[ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[options].prevTop = this[options].prevLeft = 0;\n        return function (e) {\n            var top = _this[options].movableContainer ? _this[options].container.scrollTop : e.target.scrollTop;\n            var left = _this[options].movableContainer ? _this[options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[options].prevTop < top ? 'down' : 'up';\n            direction = _this[options].prevLeft === left ? direction : _this[options].prevLeft < left ? 'right' : 'left';\n            _this[options].prevTop = top;\n            _this[options].prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && current.axis === 'X') {\n                if (_this[movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[movableEle], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[element], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n            }\n            _this[fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","triggerEvents","bindGridEvents","rowSelecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","getColumnByField","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","freeze","refreshScrollOffset","collapsingArgs","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","pindex","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","primaryKeyField","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","this_1","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","info","virtualInfo","blockIndexes","getBlockIndexes","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","primaryKeys_2","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","xAxis","axis","getColumnOffset","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","virtualEle","adjustTable","header","sentinel","outBuffer","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","event","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","virtualScrollHandlers","delay","debounced50","debounce","prevTop","prevLeft","movableContainer","scrollbar","delta","clearTimeout","setTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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"}